{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport React, { useState } from \"react\";\nimport { styles } from \"../App\";\nimport { useQuery } from \"@apollo/client\";\nimport { CONTINENT_QUERY } from \"./gql/Query\";\nimport CountriesScreen from \"./CountriesScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function HomeScreen() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    modalVisible = _useState2[0],\n    setModalVisible = _useState2[1];\n  var _useState3 = useState(\"AF\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    code = _useState4[0],\n    setCode = _useState4[1];\n  var _useQuery = useQuery(CONTINENT_QUERY),\n    data = _useQuery.data,\n    loading = _useQuery.loading;\n  var ContinentItem = function ContinentItem(_ref) {\n    var continent = _ref.continent;\n    var name = continent.name,\n      code = continent.code;\n    return _jsx(Pressable, {\n      style: styles.item,\n      onPress: function onPress() {\n        setModalVisible(true);\n        setCode(code);\n      },\n      children: _jsx(Text, {\n        style: styles.header,\n        children: name\n      })\n    });\n  };\n  if (loading) {\n    return _jsx(Text, {\n      children: \"Fetching data...\"\n    });\n  }\n  return _jsxs(_Fragment, {\n    children: [_jsx(FlatList, {\n      data: data.continents,\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item;\n        return _jsx(ContinentItem, {\n          continent: item\n        });\n      },\n      keyExtractor: function keyExtractor(item, index) {\n        return index;\n      }\n    }), _jsx(CountriesScreen, {\n      code: code,\n      modalVisible: modalVisible,\n      setModalVisible: setModalVisible\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","styles","useQuery","CONTINENT_QUERY","CountriesScreen","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","HomeScreen","_useState","_useState2","_slicedToArray","modalVisible","setModalVisible","_useState3","_useState4","code","setCode","_useQuery","data","loading","ContinentItem","_ref","continent","name","Pressable","style","item","onPress","children","Text","header","FlatList","continents","renderItem","_ref2","keyExtractor","index"],"sources":["C:/Users/VAIO i7/Documents/VS Code/My Projects/firstReactNative/src/main/react-native-old/src/HomeScreen.js"],"sourcesContent":["import { Text, FlatList, Pressable } from \"react-native\";\nimport React, { useState } from \"react\";\nimport { styles } from \"../App\";\nimport { useQuery } from \"@apollo/client\";\nimport { CONTINENT_QUERY } from \"./gql/Query\";\nimport CountriesScreen from \"./CountriesScreen\";\n\nexport default function HomeScreen() {\n  const [modalVisible, setModalVisible] = useState(false);\n  const [code, setCode] = useState(\"AF\");\n  const { data, loading } = useQuery(CONTINENT_QUERY);\n\n  const ContinentItem = ({ continent }) => {\n    const { name, code } = continent;\n    \n    return (\n      <Pressable style={styles.item} onPress={() => {setModalVisible(true); setCode(code);}}>\n        <Text style={styles.header}>{name}</Text>\n      </Pressable>\n    );\n  };\n\n  if (loading) {\n    return <Text>Fetching data...</Text>;\n  }\n\n  return (\n    <>\n      <FlatList\n        data={data.continents}\n        renderItem={({ item }) => <ContinentItem continent={item} />}\n        keyExtractor={(item, index) => index}\n      />\n      <CountriesScreen code={code} modalVisible={modalVisible} setModalVisible={setModalVisible}/>\n    </>\n  );\n}\n"],"mappings":";;;;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM;AACf,SAASC,QAAQ,QAAQ,gBAAgB;AACzC,SAASC,eAAe;AACxB,OAAOC,eAAe;AAA0B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEhD,eAAe,SAASC,UAAUA,CAAA,EAAG;EACnC,IAAAC,SAAA,GAAwCZ,QAAQ,CAAC,KAAK,CAAC;IAAAa,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAhDG,YAAY,GAAAF,UAAA;IAAEG,eAAe,GAAAH,UAAA;EACpC,IAAAI,UAAA,GAAwBjB,QAAQ,CAAC,IAAI,CAAC;IAAAkB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA/BE,IAAI,GAAAD,UAAA;IAAEE,OAAO,GAAAF,UAAA;EACpB,IAAAG,SAAA,GAA0BnB,QAAQ,CAACC,eAAe,CAAC;IAA3CmB,IAAI,GAAAD,SAAA,CAAJC,IAAI;IAAEC,OAAO,GAAAF,SAAA,CAAPE,OAAO;EAErB,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAAC,IAAA,EAAsB;IAAA,IAAhBC,SAAS,GAAAD,IAAA,CAATC,SAAS;IAChC,IAAQC,IAAI,GAAWD,SAAS,CAAxBC,IAAI;MAAER,IAAI,GAAKO,SAAS,CAAlBP,IAAI;IAElB,OACEb,IAAA,CAACsB,SAAS;MAACC,KAAK,EAAE5B,MAAM,CAAC6B,IAAK;MAACC,OAAO,EAAE,SAAAA,QAAA,EAAM;QAACf,eAAe,CAAC,IAAI,CAAC;QAAEI,OAAO,CAACD,IAAI,CAAC;MAAC,CAAE;MAAAa,QAAA,EACpF1B,IAAA,CAAC2B,IAAI;QAACJ,KAAK,EAAE5B,MAAM,CAACiC,MAAO;QAAAF,QAAA,EAAEL;MAAI;IAAQ,EAC/B;EAEhB,CAAC;EAED,IAAIJ,OAAO,EAAE;IACX,OAAOjB,IAAA,CAAC2B,IAAI;MAAAD,QAAA,EAAC;IAAgB,EAAO;EACtC;EAEA,OACEtB,KAAA,CAAAF,SAAA;IAAAwB,QAAA,GACE1B,IAAA,CAAC6B,QAAQ;MACPb,IAAI,EAAEA,IAAI,CAACc,UAAW;MACtBC,UAAU,EAAE,SAAAA,WAAAC,KAAA;QAAA,IAAGR,IAAI,GAAAQ,KAAA,CAAJR,IAAI;QAAA,OAAOxB,IAAA,CAACkB,aAAa;UAACE,SAAS,EAAEI;QAAK,EAAG;MAAA,CAAC;MAC7DS,YAAY,EAAE,SAAAA,aAACT,IAAI,EAAEU,KAAK;QAAA,OAAKA,KAAK;MAAA;IAAC,EACrC,EACFlC,IAAA,CAACF,eAAe;MAACe,IAAI,EAAEA,IAAK;MAACJ,YAAY,EAAEA,YAAa;MAACC,eAAe,EAAEA;IAAgB,EAAE;EAAA,EAC3F;AAEP"},"metadata":{},"sourceType":"module","externalDependencies":[]}